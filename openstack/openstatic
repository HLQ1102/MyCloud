openstatic环境准备

搭建dns服务器
yum -y install bind bind-chroot
vim /etc/named.conf
  listen-on port 53 { 192.168.1.254; };
  listen-on-v6 port 53 { ::1; };
  allow-query     { any; };
  recursion yes;
  forwarders {114.114.114.114;};

真机搭建件时间服务器 保证所有的虚拟机的时间一致
yum -y install chrony
vim /etc/chrony.conf
  server ntp.aliyun.com iburst  //使用阿里云的时间服务器
  bindacqaddres 0.0.0.0
  allow 0/0
chronyc sources -v  //验证时间服务器

云计算
基于互联网的相关服务的增加、使用和交付模式
这种模式提供可用的便捷的、按需的网路访问，进入可配置的计算资源共享池



IaaS云



PaaS云
（Platform-as-a-Service）平台即服务
 - 以服务器平台或者开发环境作为服务进行提供就成为PaaS
 - PaaS运营商所需提供的服务，不仅仅是单纯的基础平台，还针对该平台的技术支持服务，甚至针对该平台而进行的应用系统开发、优化等服务
 - 简单的说，PaaS平台是指云环境中的应用基础设施服务，也可以说是中间件即服务

SaaS云
（Software-as-a-Service）软件即服务，是一种通过Internet提供软件的模式，厂商将应用软件统一部署在自己的服务器上，客户可以根据自己实际需求，通过互联网向厂商订购所需的应用软件服务
 - 用户不用再购买软件，而是向提供商租用基于web的软件，来管理企业经营活动，不用对软件进行维护，提供商会全权管理和维护软件，同时也提供软件的离线操作和本地数据存储



Openstack组件
• Horizon
- 用于管理Openstack各种服务的、基于web的管理接口
- 通过图形界面实现创建用户、管理网路、启动实例等操作

• Keystone
– 为其他服务提供认证和授权的集中身份管理服务
– 也提供了集中的目录服务
– 支持多种身份认证模式,如密码认证、令牌认证、以及AWS(亚马逊Web服务)登陆
– 为用户和其他服务提供了SSO认证服务 

• Neutron
– 一种软件定义网络服务
– 用于创建网络、子网、路由器、管理浮劢IP地址
– 可以实现虚拟交换机、虚拟路由器
– 可用于在项目中创建VPN

• Cinder
– 为虚拟机管理存储卷的服务
– 为运行在Nova中的实例提供永久的块存储
– 可以通过快照迚行数据备份
– 经常应用在实例存储环境中,如数据库文件

• Nova
– 在节点上用于管理虚拟机的服务
– Nova是一个分布式的服务,能够不Keystone交互实现认证,不Glance交互实现镜像管理
– Nova被设计成在标准硬件上能够迚行水平扩展
– 启劢实例时,如果有则需要下载镜像

• Glance
– 扮演虚拟机镜像注册的角色
– 允许用户为直接存储拷贝服务器镜像
– 这些镜像可以用于新建虚拟机的模板

mount -t iso9660 -o ro,loop /iso /mnt/


虚拟机1 openstack nova
hostname:openstack
   内存：9.5G
   硬盘，系统：50G
   硬盘 ：20G 空盘
   网卡  2块 vbr、provate1

虚拟机2 nova
hostname:nova01
   内存：5G
   硬盘，系统：50G
   网卡  2块 vbr、provate1

(1)创建磁盘
   qemu-img create -b node.qcow2  -f qcow2 openstack.img 50G
   qemu-img create -f qcow2 nova01.img 20G
   qemu-img create -b node.qcow2  -f qcow2 nova01.img 50G
(2)准备xml文件
   sed 's,node,openstack,' /etc/libvirt/qemu/node.xml > /etc/libvirt/qemu/openstack.xml
   sed 's,node,nova01,' /etc/libvirt/qemu/node.xml > /etc/libvirt/qemu/nova01.xml
(3)定义虚拟机
   virsh define /etc/libvirt/qemu/openstack.xml
   virsh define /etc/libvirt/qemu/nova01.xml
(4)添加网卡，两台虚拟机都要添加
    <interface type='bridge'>
      <source bridge='private1'/>
      <model type='virtio'/>
    </interface>
(5)修改应用的磁盘
  虚拟机nova01:
    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2'/>
      <source file='/var/lib/libvirt/images/nova01.img'/>
      <target dev='vda' bus='virtio'/>
    </disk>
  虚拟加openstack:
    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2'/>
      <source file='/var/lib/libvirt/images/openstack.img'/>
      <target dev='vda' bus='virtio'/>
    </disk>
    <disk type='file' device='disk'>
      <driver name='qemu' type='qcow2'/>
      <source file='/var/lib/libvirt/images/disk.img'/>
      <target dev='vda' bus='virtio'/>
    </disk>
(6)启动虚拟机
   virsh start openstack
   virsh start nova01
(7)修改IP地址eth0，eth1
nova01: eth0    
    DEVICE="eth0"
    ONBOOT="yes"
    NM_CONTROLLED="no"
    TYPE="Ethernet"
    BOOTPROTO="static"
    IPADDR="192.168.1.11"
    NETMASK="255.255.255.0"
       eth1
    DEVICE="eth1"
    ONBOOT="yes"
    NM_CONTROLLED="no"
    TYPE="Ethernet"
    BOOTPROTO="static"
    IPADDR="192.168.4.11"
    NETMASK="255.255.255.0"
openstack: eth0
    DEVICE="eth0"
    ONBOOT="yes"
    NM_CONTROLLED="no"
    TYPE="Ethernet"
    BOOTPROTO="static"
    IPADDR="192.168.1.10"
    NETMASK="255.255.255.0"
       eth1
    DEVICE="eth1"
    ONBOOT="yes"
    NM_CONTROLLED="no"
    TYPE="Ethernet"
    BOOTPROTO="static"
    IPADDR="192.168.4.10"
    NETMASK="255.255.255.0"

8)配置/etc/hosts
    192.168.1.10 openstack
    192.168.4.10 openstack
    192.168.1.11 nova01
    192.168.4.11 nova01
9)配置/etc/resole.conf
    nameserver 192.168.1.254
9)配置/etc/chrony.conf
    server 192.168.1.254 iburst
10)配置12个yum源


openstack环境准备
1.配置yum仓库
2.设置DNS服务器
3.NTP服务
4.配置卷组
  yum -y install lvm2 
  pvcreate /dev/vdb
  vgcreate cinder-volumes /dev/vdb
5.导入公钥
  rpm --import RPM-GPG-KEY-CentOS-7
6.安装额外软件包,这些软件包需提前安装
  yum install -y qemu-kvm libvirt-client libvirt-daemon libvirt-daemon-driver-qemu python-setuptools

检查openstack环境部署
• 是否禁用selinux
• 是否卸载firewalld和NetworkManager
• 检查配置主机网络参数(静态IP)
• 检查配置主机yum源(12个),10731个包
• 检查cinder-volumes卷组是否已经创建
• 检查公钥是否导入
• 查看相关软件包是否安装，（第6步额外软件包）
• 检查NTP和DNS服务器是否可用

部署Openstack
1.安装packstack,openstack的安装部署工具
   yum install -y openstack-packstack
  1.1创建
      packstack --gen-answer-file=answer.ini
     //answer.ini与answer.txt是一样的，只是用vim打开answer.ini文件有颜色

  11 CONFIG_DEFAULT_PASSWORD=redhat     //设置默认密码
  42 CONFIG_SWIFT_INSTALL=n        //不用ceph
  75 CONFIG_NTP_SERVERS=192.168.1.254  //配置的NTP时间服务器
 554 CONFIG_CINDER_VOLUMES_CREATE=n  //卷组的创建，不使用默认的创建方式，手动创建
 840 CONFIG_NEUTRON_ML2_TYPE_DRIVERS=flat,vxlan   //添加扁平网络flat，添加上网需求
 876 CONFIG_NEUTRON_ML2_VXLAN_GROUP=239.1.1.3    //组播
 910 CONFIG_NEUTRON_OVS_BRIDGE_MAPPINGS=physnet1:br-ex  //物理网桥,br-ex是虚拟交换机，桥接将物理机的网卡当作虚拟交换机的的一个端口，和外界通讯
 921 CONFIG_NEUTRON_OVS_BRIDGE_IFACES=br-ex:eth0   //br-ex桥的名称与eth0连接，管理eth0,网桥与哪个物理网卡连接
 936 CONFIG_NEUTRON_OVS_TUNNEL_IF=eth1  //配置隧道使用的网卡
1179 CONFIG_PROVISION_DEMO=n //关闭DEMO测试
 
  packstack    --answer-file=answer.ini
  **** Installation completed successfully ******        //出现这个为成功


cd /etc/sysconfig/network-script/
cat ifcfg-br-ex       //多了一张网卡，夺走了eth0的ip地址
  ONBOOT="yes"
  NM_CONTROLLED="no"
  IPADDR="192.168.1.10"
  NETMASK="255.255.255.0"
  DEVICE=br-ex
  NAME=br-ex
  DEVICETYPE=ovs            //类型为ovs
  OVSBOOTPROTO="static"
  TYPE=OVSBridge            //是一个ovs网桥

cat ifcfg-eth0
  DEVICE=eth0
  NAME=eth0
  DEVICETYPE=ovs       //类型变位了ovs
  TYPE=OVSPort          //eth0变成了ovs网桥的一个端口了
  OVS_BRIDGE=br-ex      //是属于br-ex的
  ONBOOT=yes
  BOOTPROTO=none

]# ovs-vsctl show
8aee9723-82d3-4967-a613-2e5cf1af1c4f
    Manager "ptcp:6640:127.0.0.1"
        is_connected: true
    Bridge br-tun
        Controller "tcp:127.0.0.1:6633"
            is_connected: true
        fail_mode: secure
        Port patch-int
            Interface patch-int
                type: patch
                options: {peer=patch-tun}
        Port br-tun
            Interface br-tun
                type: internal
    Bridge br-ex                         //相当于一个路由器
        Controller "tcp:127.0.0.1:6633"
            is_connected: true
        fail_mode: secure
        Port br-ex
            Interface br-ex
                type: internal
        Port phy-br-ex
            Interface phy-br-ex
                type: patch
                options: {peer=int-br-ex}
        Port "eth0"                       //eth0网卡变成了这个路由器的对外端口
            Interface "eth0"
    Bridge br-int                         //对内的网络
        Controller "tcp:127.0.0.1:6633"
            is_connected: true
        fail_mode: secure
        Port br-int
            Interface br-int
                type: internal
        Port patch-tun
            Interface patch-tun
                type: patch
                options: {peer=patch-int}
        Port int-br-ex
            Interface int-br-ex
                type: patch
                options: {peer=phy-br-ex}
    ovs_version: "2.5.0"

- 这个文件记录着openstack的的认证信息，但是这个文件的账户不控制openstack的用户名和密码
  /root/keystonerc_admin   



1.新建云主机类型，管理员操作
  相当于创建主机模板(xml文件)，以后都用这个模板来创建虚拟机，可以创建多个模板
2.通过Horizon管理镜像，上传后端盘镜像
   镜像后端盘，创建虚拟主机就是使用这个后端盘作为磁盘模板进行创建

3.以管理员身份，创建对外的公网，并且创建一个广域网（子网），内部路由器指向该子网的ip，
4.以普通用户的身份，创建一个私网，在私网里创建私网（子网），云主机就连接到这一个网络上
5.创建云主机，连接到私网上

当主机开机后出现1006错误时检查这个文件的8465行，检查等于号后面的值，
vim /etc/nova/nova.conf
8465 vncserver_proxyclient_address=openstack.vbr

openstack服务
nova-api  //api接口
nova-compute  //虚拟机的控制服务
nova-console  //web平台的控制服务
nova-novncproxy 

 

浮动ip



































